#+title: Pngme

Encode and decode hidden messages in PNG files.

* Introduction
This is a personal project for learning purposes. Of course, it is not available to install as a crate on crates.io but you can clone and install it locally:
#+begin_src sh
git clone https://github.com/UberChili/pngmev2.git
cd pngme
cargo build --release
#+end_src

Then you can run the exacutable via:
#+begin_src sh
./target/release/pngme
#+end_src

Or you can install globally so you can run it from anywhere:
#+begin_src sh
cargo install --path
#+end_src

* Background
I decided to reimplement Pngme a second time to reinforce my Rust knowledge, shortly after reading (also for a second time) the Rust Book. Unfortunately this is starting to look dangerously close like tutorial hell. But I should be able to move on soon.

Still, I was without nothing else to do and now being sure how to proceed, so I figured doing something /again/ was better than not doing anything at all. That and, for whatever reasong, Rust feels like a language you need to put in hours and hours of practice, lest you forget about it.

* Implementation
This implementation was written with a far greater understanding of Rust, although still very much a work in progress. It has way cleaner and more idiomatic code.

The [[https://github.com/UberChili/pngme/][First time]] I tried to implement this project, I barely understood many aspects of Rust and was pretty much only pushing through adding up the little pieces, heavily relying on asking help to an LLM.
This time... I also asked for a lot of help to an LLM, but I was mostly asking for guidance or tips, not full solution code, other than once or twice with very specific details. The code was flowing way quicker and easier. I am overall happy with the new results.

* Usage
Run without any arguments to get a list of possible commands:
#+begin_src sh
pngme
#+end_src
This will output:
#+begin_src sh
Usage: pngme <COMMAND>

Commands:
  encode  Encodes a message into a chunk from a specified file
  decode  Decodes and prints a hidden message in the specified file and chunk
  remove  Removs a message from a file, if it exists
  print   Prints all the chunks of a given file
  help    Print this message or the help of the given subcommand(s)

Options:
  -h, --help  Print help
#+end_src
Run a command without additional arguments to get a list of the needed options or subcommands:
#+begin_src sh
pngme encode

error: the following required arguments were not provided:
  <FILEPATH>
  <CHUNK>
  <MESSAGE>

Usage: pngme encode <FILEPATH> <CHUNK> <MESSAGE>
#+end_src

** Encoding a message in a PNG file:
#+begin_src sh
pngme decode <filepath> <chunk_type> <message>
#+end_src
Where each parameter is a string, for example:
#+begin_src sh
pngme decode pic.png ruSt "Hello, friend!"
#+end_src
** Decode a message from a PNG file:
#+begin_src sh
pngme decode <filepath> <chunk_type>
#+end_src
Which is:
#+begin_src sh
pngme decode pic.png ruSt
#+end_src
This would print:
#+begin_src sh
Message: "Hello, friend!"
#+end_src
